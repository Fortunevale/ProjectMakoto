name: Deploy to Production Server
on: 
  push:
    branches: [ main ]
  workflow_dispatch:

permissions: write-all

jobs:
  build:
    name: Build Project and Upload to Server
    runs-on: self-hosted
    steps:
      - name: Cleanup
        run: rm -rf ProjectMakoto/
      - name: Install SSH Key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_TOKEN }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOST }}
      - name: Setup .NET Core SDK 7.x
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'
      - name: "Clone Repository"
        uses: actions/checkout@v3
        with:
          submodules: recursive
          path: ProjectMakoto
          token: ${{ secrets.Access_token }}
      - name: Install Dependencies
        run: dotnet restore
        working-directory: ProjectMakoto/ProjectMakoto/
      - name: Build Makoto
        run: dotnet publish --configuration RELEASE --runtime linux-x64 --no-self-contained --output "build" --property:PublishDir="build"
        working-directory: ProjectMakoto/ProjectMakoto/
      - name: Create Version File
        run: git rev-parse --short HEAD > "ProjectMakoto/build/LatestGitPush.cfg" && git branch --show-current >> ProjectMakoto/build/LatestGitPush.cfg && echo $(date +%d.%m.%y) >> ProjectMakoto/build/LatestGitPush.cfg && echo $(date +%H:%M:%S,00) >> ProjectMakoto/build/LatestGitPush.cfg
        working-directory: ProjectMakoto/
#      - name: Deploy to Production Server
#        run: rsync -avz --delete --force -e "ssh -p ${{ secrets.SSH_PORT }}" . ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_SERVER }}:/home/${{ secrets.SSH_USERNAME }}/Bots/latestProjectIchigo/
#        working-directory: ProjectMakoto/ProjectMakoto/build/
#      - name: Send Update Signal to Production Client
#        run: ssh ${{ secrets.SSH_USERNAME }}@${{ secrets.SSH_SERVER }} -p ${{ secrets.SSH_PORT }} touch /home/${{ secrets.SSH_USERNAME }}/Bots/ProjectIchigo/updated
      - name: Create Zip File from Build
        run: zip -r Release.zip build
        working-directory: ProjectMakoto/ProjectMakoto/
      - name: Set outputs
        id: vars
        run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - uses: rickstaa/action-create-tag@v1
        with:
          tag: ${{ steps.vars.outputs.sha }}
          tag_exists_error: false
      - name: Release to Github
        uses: softprops/action-gh-release@v1
        with:
          files: ProjectMakoto/ProjectMakoto/Release.zip
        env:
          generate_release_notes: true
          prerelease: true
          tag_name: ${{ steps.vars.outputs.sha }}
          name: ${{ steps.vars.outputs.sha }}
      - name: Cleanup
        run: rm -rf ProjectMakoto/
        if: always()